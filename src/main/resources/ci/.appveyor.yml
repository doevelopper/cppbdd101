version: '{build}'

platform:
    - x64

environment:
    matrix:
        - GENERATOR: MinGW Makefiles
        - arch: Win64

        - GENERATOR: Visual Studio 14 2015 Win64
            APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

        # Clang/LLVM
        - GENERATOR: Visual Studio 14 2015 Win64
          TOOLSET: LLVM-vs2014
            APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015

        # /std:c++14
        - GENERATOR: Visual Studio 15 2017 Win64
          CXXFLAGS: /std:c++14 /permissive-
            APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

        # /std:c++latest
        - GENERATOR: Visual Studio 15 2017 Win64
          CXXFLAGS: /std:c++latest /permissive-
            APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017

branches:
    only:
        - master
        - develop

clone_depth: 1

image:
    - Visual Studio 2013
    - Visual Studio 2015
    - Visual Studio 2017

configuration:
    - Debug
    - Release

# Use the source dir expected by gclient.

clone_folder: D:\repository\cppbdd101
# Before checkout.
init:
    - cd %APPVEYOR_BUILD_FOLDER%\..\..
    - set arch=
    - if "%arch%"=="Win64" ( set arch= Win64)
    - echo %arch%
    - echo %APPVEYOR_BUILD_WORKER_IMAGE%
    - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2017" ( set generator="Visual Studio 15 2017%arch%" )
    - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2015" ( set generator="Visual Studio 14 2015%arch%" )
    - if "%APPVEYOR_BUILD_WORKER_IMAGE%"=="Visual Studio 2013" ( set generator="Visual Studio 12 2013%arch%" )
    - echo %generator%  
# After checkout.
install:
    - PATH C:\projects\depot_tools;%PATH%
    - cd %APPVEYOR_BUILD_FOLDER%\..

build:
    verbosity: detailed
    parallel: true

install:
    - cmake --version

before_build:
    - cmd: |-
    # Workaround for CMake not wanting sh.exe on PATH for MinGW
    - set PATH=%PATH:C:\Program Files\Git\usr\bin;=%
    - ECHO %PATH%
    - set PATH=C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin;%PATH%
    - DIR C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1
    - DIR C:\mingw-w64\x86_64-6.3.0-posix-seh-rt_v5-rev1\mingw64\bin
    - DIR C:\mingw\bin  
    - cmake -G "$env:GENERATOR"
    - mkdir build
    - cd build
    - cmake --version
#    - cmake -G "%GENERATOR%" ..
    cmake --build . --config Debug
    ctest --output-on-failure --build-config Debug
    cmake --build . --config Release
    ctest --output-on-failure --build-config Release

build_script:
    - mingw32-make 
    - dir tests
    - dir C:\projects\cpp-exercises\build\tests\cppbdd101.exe

test_script:
  - src\windows\%CONFIGURATION%\cppbdd101.exe
  - src\windows\%CONFIGURATION%\dump_syms_unittest.exe
  
artifacts:
  - path: '**\*.exe'
  - path: '**\*.lib'