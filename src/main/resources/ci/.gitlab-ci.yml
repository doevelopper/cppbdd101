image: maven:latest

stages:
    - prepare
    - prebuild
    - build
    - test
    - integration
    - package
    - release
    - run
    - publication

variables:
    MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
    MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
    paths:
        - .m2/repository/
        - target/

before_script:
    - echo "Starting Gitlab CI-controlled continuous integration..."
    - apt-get update; apt-get install -y git cmake make g++
    - git submodule update --init --recursive
    # Install JFrog CLI
    -  curl -fL https://getcli.jfrog.io | sh
    # Configure Artifactory instance with JFrog CLI
    - ./jfrog rt config --url=$ARTIFACTORY_URL --user=$ARTIFACTORY_USER --password=$ARTIFACTORY_PASS
    - ./jfrog rt c show
    # Set the M2_HOME environment variable
    - export M2_HOME=/usr/share/maven
    # Replace the repository name in the configuration.yml to the correct one.
    - sed -i 's,MAVEN_REPO_KEY,'"$MAVEN_REPO_KEY"',g' configuration.yml


build:
    stage: build
    script:
        #- mvn -q -B -T4 clean deploy --settings settings.xml
        - mvn $MAVEN_CLI_OPTS compile
        # Run the MVN command
        - ./jfrog rt mvn "clean install" configuration.yml --build-name=gitlabci-maven-artifactory --build-number=$CI_JOB_ID
        # Collect the environment variables
        - ./jfrog rt bce gitlabci-maven-artifactory $CI_JOB_ID
        # Pass the build information to Artifactory
        - ./jfrog rt bp gitlabci-maven-artifactory $CI_JOB_ID
    only:
        - master
test:
    stage: test
    script:
        - mvn $MAVEN_CLI_OPTS test

run:
    stage: run
    script:
        - mvn $MAVEN_CLI_OPTS package
        - mvn $MAVEN_CLI_OPTS exec:java -Dexec.mainClass="com.example.app.App"

build-cppbdd101:
    stage: build
        only: 
            - master
        tags:
            - linux
            - cmake
            - gcc
    script:
            -cmake -E make_directory build
            -cmake -E chdir build cmake  -G "Unix Makefiles"  ..
            -cmake --build build -- -j 16
    artifacts:
        paths:
            - build/

test-cppbdd101:
    stage: test
        tags:
            - linux
            - cmake
            - gcc
    script:
        -cmake --build build --target test
    dependencies:
        - build-cppbdd101
    artifacts:
        paths:
            - build/
#      expire_in: 1d

integration-cppbdd101:
    stage: integration
        tags:
            - linux
            - cmake
            - gcc
    script:
        -cmake --build build --target test
    dependencies:
        - build-cppbdd101
    artifacts:
        paths:
            - build/
 #     expire_in: 1d
